global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log                     global
        mode                    http
        option                  httplog
        option                  dontlognull
        option                  http-server-close
        option                  redispatch
        retries                 3
        timeout http-request    10s
        timeout queue           1m
        timeout connect         10s
        timeout client          1m
        timeout server          1m
        timeout http-keep-alive 10s
        timeout check           10s
        maxconn                 3000
        balance                 roundrobin
        cookie                  SESSIONID prefix

backend blue
    http-check send meth GET  uri /V1hwT1UyRkhVa2xXYm05TENnPT0K/status
    http-response set-header X-Server WW14MVpRPT0K
    http-response del-header x-kong-response-latency
    server blue-server localhost:{{ kong_port_blue }} check inter 4s rise 3 fall 1
    server green-server localhost:{{ kong_port_green }} backup check inter 4s rise 3 fall 1

backend green
    http-check send meth GET  uri /V1hwT1UyRkhVa2xXYm05TENnPT0K/status
    http-response set-header X-Server WjNKbFpXND0K
    http-response del-header x-kong-response-latency
    server green-server localhost:{{ kong_port_green }} check inter 4s rise 3 fall 1
    server blue-server localhost:{{ kong_port_blue }} backup check inter 4s rise 3 fall 1

frontend app
    bind *:{{ haproxy_port }}
    mode http

    acl is_blue hdr_beg(X-Backend) -i blue
    acl is_green hdr_beg(X-Backend) -i green

    use_backend blue if is_blue
    use_backend green if is_green
    
    default_backend green

frontend combined_metrics
    bind *:{{ kong_metrics }}
    mode http

    acl is_blue path_beg /blue/metrics
    acl is_green path_beg /green/metrics

    use_backend blue_metrics_backend if is_blue
    use_backend green_metrics_backend if is_green

    default_backend green_metrics_backend

frontend prometheus_frontend
    bind *:{{ haproxy_metrics_port }}
    http-request use-service prometheus-exporter if { path /haproxy-stats }
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy-stats

backend blue_metrics_backend
    mode http
    server blue_metrics_server localhost:{{ kong_admin_port_blue }} check
    http-request set-path /metrics

backend green_metrics_backend
    mode http
    server green_metrics_server localhost:{{ kong_admin_port_green }} check
    http-request set-path /metrics

listen prometheus_exporter
    bind *:{{ haproxy_metrics_port }}
    http-request use-service prometheus-exporter if { path /haproxy-stats }
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy-stats
